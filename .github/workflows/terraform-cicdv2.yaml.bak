name: terraform-cluster-oci
on:
  push:
    branches:
      - main
    # - oci
    # tags:
    #   - "infra-oci-v**"
    paths:
    - clusters/oci/**
    - .github/workflows/terraform-cicdv2.yaml

  workflow_dispatch:
    inputs:
      apply:
        description: 'Run terraform apply?'
        required: false
        type: choice
        default: 'false'
        options:
          - 'true'
          - 'false'


# ToDo: Matrix conditional scenarios for each environment.

env:
  # Variables for global usage
  environment: oci # Ambiente de ejecuci√≥n
  TF_VAR_environment: oci # Ambiente de ejecucion exclusivo para Terraform
  TF_VAR_compartment_id: ${{ secrets.TF_VAR_compartment_id }}
  TF_VAR_user_ocid: ${{ secrets.TF_VAR_user_ocid }}
  TF_VAR_fingerprint: ${{ secrets.TF_VAR_fingerprint }}
  TF_VAR_private_key_path: ${{ secrets.TF_VAR_private_key_path }}
  TF_VAR_ssh_authorized_keys: ${{ secrets.TF_VAR_ssh_authorized_keys }}
  TF_VAR_region: ${{ secrets.TF_VAR_region }}
  TF_VAR_tenancy_ocid: ${{ secrets.TF_VAR_tenancy_ocid }}

# variable "ssh_public_key" {} 
# variable "image_ocid" {}
# variable "ssh_private_key_path" {}
# variable "ssh_private_key" {}
# variable "cluster_token" {}
# variable "compartment_ocid" {}
# variable "current_user_ocid" {}
# variable "private_key" {}



jobs:
  terraform-oci-plan:
    runs-on: ubuntu-latest
    environment: oci

    permissions:
      contents: write
      id-token: write
      pull-requests: write


    defaults:
      run:
        # shell: bash
        working-directory: clusters/oci

    steps:
      - uses: actions/checkout@v3
        name: get the latest code
        with:
          fetch-depth: 0
        id: checkout

      - name: dump secrets into github env from secret encoded Base64
        id: dump_files
        run: |

      - name: setup tf
        id: setup_terraform
        uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: 1.0.4


      # THis step ios optional and is safe to fail, you can use to check the format of your files.
      # - name: Terraform fmt
      #   id: fmt
      #   run: terraform fmt -check
      #   continue-on-error: true

      - name: Terraform Init
        id: init
        # continue-on-error: false
        env:
          TF_LOG: INFO
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: true

      - name: Terraform Plan
        id: plan
        run: terraform plan -input=false -out="oci.tfplan"
        # continue-on-error: false

      # Now, only when we tag a commit, starting with "infra-v**", the apply command is triggered.
      - name: terraform-apply-oci
        id: apply
        # if: startsWith(github.ref, 'refs/tags/infra')
        env:
          APPLY: ${{ github.event.inputs.apply }}
        if: env.APPLY == 'true'
        run: terraform apply -auto-approve "oci.tfplan"

      - name: save plan + tfstate
        uses: actions/upload-artifact@v2
        if: always()
        continue-on-error: true
        with:
          name: terraform-oci-plan
          path: |
            clusters/oci/oci.tfplan
            clusters/oci/terraform.tfstate
            clusters/oci/terraform.tfstate.backup
