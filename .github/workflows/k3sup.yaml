name: install_k3sup
on:
  workflow_dispatch:
    inputs:
      k3sup:
        description: 'Install k3sup?'
        required: false
        type: choice
        default: 'false'
        options:
          - 'true'
          - 'false'



# ToDo: Matrix conditional scenarios for each environment.

env:
  # Variables for global usage
  # environment: oci # Ambiente de ejecuciÃ³n
  # TF_VAR_environment: oci # Ambiente de ejecucion exclusivo para Terraform
  TF_VAR_compartment_id: ${{ secrets.OCI_COMPARTMENT_OCID }}
  TF_VAR_user_ocid: ${{ secrets.OCI_USER_OCID }}
  TF_VAR_fingerprint: ${{ secrets.OCI_FINGERPRINT }}
  TF_VAR_private_key_path: ${{ github.workspace }}/clusters/oci/oci_private_key.pem
  TF_VAR_ssh_authorized_keys: ${{ secrets.OCI_SSH_PUBLIC_KEY }}
  TF_VAR_region: ${{ secrets.OCI_REGION }}
  TF_VAR_tenancy_ocid: ${{ secrets.OCI_TENANCY_OCID }}
  TF_VAR_private_key: ${{ secrets.OCI_PRIVATE_KEY }}
  TF_VAR_cluster_token: ${{ secrets.OCI_CLUSTER_TOKEN }}
  TF_VAR_ssh_public_key: '${{ secrets.OCI_SSH_PUBLIC_KEY }}'
  # TF_VAR_ssh_private_key_path: ${{ github.workspace }}/clusters/oci/oci_private_key.pem
  TF_VAR_ssh_private_key: '${{ secrets.OCI_SSH_PRIVATE_KEY }}'
  TF_VAR_image_ocid: ${{ secrets.OCI_IMAGE_OCID }}
  TF_VAR_current_user_ocid: ${{ secrets.OCI_USER_OCID }}
  TF_VAR_compartment_ocid: ${{ secrets.OCI_COMPARTMENT_OCID }}


jobs:

  install-k3sup:
    # needs: terraform-oci-plan
    if: github.event.inputs.k3sup == 'true' && github.actor == 'ngeorger'
    # if: ${{ needs.terraform-oci-plan.outputs.ip_0 != '' }} 
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write
      pull-requests: write
    
  
    steps:
      - name: dump files
        id: dump_files2
        continue-on-error: true
        run: |
          mkdir -pv ${{ github.workspace }}/.ssh
          echo "${{ secrets.OCI_SSH_PRIVATE_KEY }}" | base64 -d > ${{ github.workspace }}/.ssh/id_rsa

      - name: Install k3sup
        id: install_k3sup
        continue-on-error: true
        run: |
          curl -sLS https://get.k3sup.dev | sh
          sudo mv k3sup /usr/local/bin/
          k3sup || true
      
      - name: execute k3sup
        env:
          IP_ADDRESS: ${{ secrets.OCI_IP_ADDRESS }}
        run: |
          k3sup install --ip ${{ env.IP_ADDRESS }}  --user ubuntu --ssh-key ${{ github.workspace }}/.ssh/id_rsa --cluster  --local-path clusters/oci/kubeconfig.yaml 
        continue-on-error: true

      - name: Save kubeconfig to github
        id: save_kubeconfig
        uses: actions/upload-artifact@v3
        with:
          name: kubeconfig.yaml
          path: clusters/oci/kubeconfig.yaml
        continue-on-error: true
